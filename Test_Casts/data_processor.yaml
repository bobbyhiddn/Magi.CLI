name: data_processor
description: A spell that processes data using a simple model
type: bundled
shell_type: python

requires:
  - pandas
  - scikit-learn
  - click

code: |
  import click
  import pandas as pd
  import joblib
  from pathlib import Path
  
  @click.command()
  @click.argument('input_file', type=click.Path(exists=True))
  @click.argument('output_file', type=click.Path())
  def main(input_file, output_file):
      """Process data using a simple model."""
      # Load model and scaler
      model_path = Path(__file__).parent.parent / 'artifacts' / 'model' / 'model.joblib'
      
      model = joblib.load(model_path)
      
      # Process data
      data = pd.read_csv(input_file)
      predictions = model.predict(data)
      
      # Save results
      results = pd.DataFrame(predictions, columns=['prediction'])
      results.to_csv(output_file, index=False)
      click.echo(f"Processing complete! Results saved to {output_file}")

  if __name__ == '__main__':
      main()

artifacts:
  # Simple dummy model for testing
  - path: model/model.joblib
    content: |
      # This is a dummy model that always predicts 1
      import joblib
      from sklearn.base import BaseEstimator, ClassifierMixin
      
      class DummyModel(BaseEstimator, ClassifierMixin):
          def predict(self, X):
              return [1] * len(X)
      
      model = DummyModel()
      joblib.dump(model, 'model.joblib')
      
  # Sample data for testing
  - path: data/sample_input.csv
    content: |
      feature1,feature2
      1.0,2.0
      3.0,4.0
      5.0,6.0
